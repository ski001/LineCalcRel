"correg","範囲指定した部分と他の部分の相関グラフ表示 @1:相関を計算する配列 @2:開始日付 @3:終了日付(def.今日の日付)","{__\\\tr____\\\tn__ // 配列を正規化__\\\tr____\\\tn__ // @1:正規化する配列__\\\tr____\\\tn__ // return: 0.0～1.0 で正規化された配列__\\\tr____\\\tn__ fnc(normdim__\\\tc__ __\\\tr____\\\tn__  {__\\\tr____\\\tn__   minv = fmin(@1)__\\\tc____\\\tr____\\\tn__   maxv = fmax(@1)__\\\tc____\\\tr____\\\tn__   divv = (maxv - minv)__\\\tc____\\\tr____\\\tn__   ford(tag__\\\tc__@1__\\\tc__tmp[tag] = (@1[tag] - minv) / divv)__\\\tc____\\\tr____\\\tn__   tmp__\\\tr____\\\tn__  }__\\\tr____\\\tn__ )__\\\tc__ __\\\tr____\\\tn____\\\tr____\\\tn__ // インデックスの最大値最小値、tmp に秒インデックスの配列を求める__\\\tr____\\\tn__ ford(tag__\\\tc__ @1__\\\tc__ __\\\tr____\\\tn__  {__\\\tr____\\\tn__   val = @1[tag]__\\\tc__ __\\\tr____\\\tn__   stag = timetosec(tag)__\\\tc__  // 日付インデックスを秒に変換__\\\tr____\\\tn__   if(!isdef(minidx)__\\\tc__ __\\\tr____\\\tn__    minidx = stag__\\\tc__ __\\\tr____\\\tn__    if(stag < minidx__\\\tc__ __\\\tr____\\\tn__     minidx = stag__\\\tr____\\\tn__    )__\\\tr____\\\tn__   )__\\\tc__ __\\\tr____\\\tn__   if(!isdef(maxidx)__\\\tc__ __\\\tr____\\\tn__    maxidx = stag__\\\tc__ __\\\tr____\\\tn__    if(stag > maxidx__\\\tc__ __\\\tr____\\\tn__     maxidx = stag__\\\tr____\\\tn__    )__\\\tr____\\\tn__   )__\\\tc__ __\\\tr____\\\tn__   tmp[stag] = val__\\\tc__ __\\\tr____\\\tn__  }__\\\tr____\\\tn__ )__\\\tc__ __\\\tr____\\\tn____\\\tr____\\\tn__ std = @2__\\\tc__ // 開始日付__\\\tr____\\\tn__ edd = @3__\\\tc__ // 終了日付__\\\tr____\\\tn____\\\tr____\\\tn__ stds = timetosec(std)__\\\tc__ // 開始秒__\\\tr____\\\tn__ edds = timetosec(edd)__\\\tc__ // 終了秒__\\\tr____\\\tn____\\\tr____\\\tn__ addsec = 24*60*60__\\\tc__ // 相関係数を取る間隔__\\\tr____\\\tn____\\\tr____\\\tn__ // 相関係数を addsec 間隔で取っていく__\\\tr____\\\tn__ for(didx__\\\tc__ minidx__\\\tc__  maxidx__\\\tc__ addsec__\\\tc__ __\\\tr____\\\tn__  {__\\\tr____\\\tn__   cordim[sectotime(didx)] = cor(tmp__\\\tc__ tmp__\\\tc__ 0__\\\tc__ didx__\\\tc__ didx + (edds - stds)__\\\tc__ didx - stds)__\\\tr____\\\tn__  }__\\\tr____\\\tn__ )__\\\tc__ __\\\tr____\\\tn____\\\tr____\\\tn__ // 表示__\\\tr____\\\tn__ tmp2 = normdim(@1)__\\\tc__ // @1 の配列を正規化__\\\tr____\\\tn____\\\tr____\\\tn__ // 選択範囲表示用データ作成__\\\tr____\\\tn__ ford(tag__\\\tc__ tmp2__\\\tc__ __\\\tr____\\\tn__  {__\\\tr____\\\tn__   if(tag >= std && tag <= edd__\\\tc__ __\\\tr____\\\tn__    {__\\\tr____\\\tn__     tmp3[tag] = tmp2[tag]__\\\tc__  // 選択範囲表示用データ__\\\tr____\\\tn__    }__\\\tr____\\\tn__   )__\\\tr____\\\tn__  }__\\\tr____\\\tn__ )__\\\tc__ __\\\tr____\\\tn__ setcom(cordim__\\\tc__ __\\\tq__相関係数__\\\tq__)__\\\tc__ __\\\tr____\\\tn__ setcom(tmp2__\\\tc__ __\\\tq__元データ__\\\tq__)__\\\tc__ __\\\tr____\\\tn__ setcom(tmp3__\\\tc__ __\\\tq__選択範囲__\\\tq__)__\\\tc__ __\\\tr____\\\tn__ grres = grph(cordim)__\\\tc__ __\\\tr____\\\tn__ addgrph(grres__\\\tc__ tmp2)__\\\tc__ __\\\tr____\\\tn__ addgrph(grres__\\\tc__ tmp3)__\\\tc__ __\\\tr____\\\tn____\\\tr____\\\tn__ waitresall__\\\tr____\\\tn__}","func"
