"rline","回帰直線のグラフを表示する @1:データ配列 @2:実行関数(@1:回帰直線の数式関数__\\\tc__@2:元の配列__\\\tc__@3:xmin @4:ymin)__\\\tr____\\\tn__@2 が指定されると実行し、指定されないとグラフを表示する","// 回帰直線のグラフを表示する__\\\tr____\\\tn__// @1:グラフを表示する配列__\\\tr____\\\tn__// [@2]:実行式。__\\\tr____\\\tn__//      無名関数を渡すと__\\\tr____\\\tn__//      @1:回帰直線式関数__\\\tr____\\\tn__//      @2:タグが日付なら秒に変換された配列__\\\tr____\\\tn__//      @3:タグ最小値__\\\tc__@4:タグ最大値__\\\tr____\\\tn__//      を引数として呼び出される。__\\\tr____\\\tn__//      省略するとデフォルトのグラフ描画が呼び出される。__\\\tr____\\\tn__{__\\\tr____\\\tn__ // 回帰直線の式を得る__\\\tr____\\\tn__ // 配列インデックスの日付は連続な秒に変換しておく__\\\tr____\\\tn__ // @1:配列__\\\tr____\\\tn__ // return:回帰直線関数(@1:x とする関数)__\\\tr____\\\tn__ fnc(rformula__\\\tc____\\\tr____\\\tn__  {__\\\tr____\\\tn__   // インデックスを同じにして xlis__\\\tc__ylis を作る__\\\tr____\\\tn__   cnt = 1__\\\tc____\\\tr____\\\tn__   ford(tag__\\\tc__@1__\\\tc____\\\tr____\\\tn__    {__\\\tr____\\\tn__     xlis[cnt] = tag__\\\tc____\\\tr____\\\tn__     ylis[cnt] = @1[tag]__\\\tc____\\\tr____\\\tn__     cnt = cnt + 1__\\\tr____\\\tn__    }__\\\tr____\\\tn__   )__\\\tc____\\\tr____\\\tn__   // 回帰直線を求める__\\\tr____\\\tn__   // f = ymean + covxy/disx *(@1 - xmean)__\\\tr____\\\tn__   b = cov(xlis__\\\tc__ylis)/dis(xlis)__\\\tc____\\\tr____\\\tn____\\\tr____\\\tn__   // 回帰直線の関数を定義して返す__\\\tr____\\\tn__   def(ffnc__\\\tc__amean(ylis) & __\\\tq__+__\\\tq__ & b & __\\\tq__*(@1 - __\\\tq__ & amean(xlis) & __\\\tq__)__\\\tq__)__\\\tc____\\\tr____\\\tn__   #ffnc__\\\tr____\\\tn__  }__\\\tr____\\\tn__ )__\\\tc____\\\tr____\\\tn____\\\tr____\\\tn__ // X軸の種類を調べる__\\\tr____\\\tn__ xtime = 0__\\\tc__ // X軸は日付でない__\\\tr____\\\tn__ ford(tag__\\\tc__@1__\\\tc____\\\tr____\\\tn__  if(tag > datetime(1900__\\\tc__ 1__\\\tc__ 1)__\\\tc____\\\tr____\\\tn__   {xtime = 1__\\\tc__break}__\\\tc__ // X軸は日付__\\\tr____\\\tn__   break // X軸は数値__\\\tr____\\\tn__  )__\\\tr____\\\tn__ )__\\\tc____\\\tr____\\\tn____\\\tr____\\\tn__ // X 軸連続な時間のデータ列を求める__\\\tr____\\\tn__ if(xtime __\\\tc____\\\tr____\\\tn__  ford(tag__\\\tc__@1__\\\tc__tmp[timetosec(tag)] = @1[tag])__\\\tc__ // X軸は日付なので秒に変換__\\\tr____\\\tn__  tmp = @1 // X軸は数値なのでそのままコピー__\\\tr____\\\tn__ )__\\\tc____\\\tr____\\\tn____\\\tr____\\\tn__ // 回帰直線の式を得る__\\\tr____\\\tn__ rfmu = rformula(tmp)__\\\tc____\\\tr____\\\tn____\\\tr____\\\tn__ // インデックス最小、最大値を求める__\\\tr____\\\tn__ ford(tag__\\\tc__tmp__\\\tc__appenddim([tag]__\\\tc__tmp2))__\\\tc____\\\tr____\\\tn__ idxmin = fmin(tmp2)__\\\tc____\\\tr____\\\tn__ idxmax = fmax(tmp2)__\\\tc____\\\tr____\\\tn____\\\tr____\\\tn__ if(isdef(@2)__\\\tc____\\\tr____\\\tn__  // 指定関数を実行__\\\tr____\\\tn__  return(@2(#rfmu__\\\tc__tmp__\\\tc__idxmin__\\\tc__idxmax)) // #rfnc で関数定義文字列を得ている__\\\tr____\\\tn__ )__\\\tc____\\\tr____\\\tn____\\\tr____\\\tn__ // 回帰直線のグラフを作成する__\\\tr____\\\tn__ tmp3[idxmin] = rfmu(idxmin)__\\\tc____\\\tr____\\\tn__ tmp3[idxmax] = rfmu(idxmax)__\\\tc____\\\tr____\\\tn____\\\tr____\\\tn__ // 秒から日付にインデックスを戻す__\\\tr____\\\tn__ if(xtime__\\\tc____\\\tr____\\\tn__  // X軸は日付なので秒を日付に戻す__\\\tr____\\\tn__  ford(tag__\\\tc__tmp3__\\\tc____\\\tr____\\\tn__   tmp4[sectotime(tag)] = tmp3[tag]__\\\tr____\\\tn__  )__\\\tc____\\\tr____\\\tn__  // X軸は数値なのでそのままコピー__\\\tr____\\\tn__  tmp4 = tmp3__\\\tr____\\\tn__ )__\\\tc____\\\tr____\\\tn____\\\tr____\\\tn__ // グラフ表示__\\\tr____\\\tn__ grres = grph(tmp4)__\\\tc____\\\tr____\\\tn__ addgrph(grres__\\\tc__@1)__\\\tc____\\\tr____\\\tn__ waitres(grres)__\\\tr____\\\tn__}__\\\tr____\\\tn__","func"
